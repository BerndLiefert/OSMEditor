{"id":"L0Vw","dependencies":[{"name":"D:\\Projects\\ol\\package.json","includedInParent":true,"mtime":1586548571472},{"name":"D:\\Projects\\ol\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1586157047249},{"name":"./asserts.js","loc":{"line":4,"column":23},"parent":"D:\\Projects\\ol\\node_modules\\ol\\extent.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\asserts.js"},{"name":"./extent/Corner.js","loc":{"line":5,"column":19},"parent":"D:\\Projects\\ol\\node_modules\\ol\\extent.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\extent\\Corner.js"},{"name":"./extent/Relationship.js","loc":{"line":6,"column":25},"parent":"D:\\Projects\\ol\\node_modules\\ol\\extent.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\extent\\Relationship.js"}],"generated":{"js":"var $L0Vw$exports={};function $L0Vw$export$boundingExtent(t){for(var e=$L0Vw$export$createEmpty(),$=0,r=t.length;$<r;++$)$L0Vw$export$extendCoordinate(e,t[$]);return e}function $L0Vw$var$_boundingExtentXYs(t,e,$){return $L0Vw$export$createOrUpdate(Math.min.apply(null,t),Math.min.apply(null,e),Math.max.apply(null,t),Math.max.apply(null,e),$)}function $L0Vw$export$buffer(t,e,$){return $?($[0]=t[0]-e,$[1]=t[1]-e,$[2]=t[2]+e,$[3]=t[3]+e,$):[t[0]-e,t[1]-e,t[2]+e,t[3]+e]}function $L0Vw$export$clone(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t.slice()}function $L0Vw$export$closestSquaredDistanceXY(t,e,$){var r,o;return(r=e<t[0]?t[0]-e:t[2]<e?e-t[2]:0)*r+(o=$<t[1]?t[1]-$:t[3]<$?$-t[3]:0)*o}function $L0Vw$export$containsCoordinate(t,e){return $L0Vw$export$containsXY(t,e[0],e[1])}function $L0Vw$export$containsExtent(t,e){return t[0]<=e[0]&&e[2]<=t[2]&&t[1]<=e[1]&&e[3]<=t[3]}function $L0Vw$export$containsXY(t,e,$){return t[0]<=e&&e<=t[2]&&t[1]<=$&&$<=t[3]}function $L0Vw$export$coordinateRelationship(t,e){var $=t[0],r=t[1],o=t[2],n=t[3],p=e[0],a=e[1],i=$L0Vw$import$Relationship.UNKNOWN;return p<$?i|=$L0Vw$import$Relationship.LEFT:p>o&&(i|=$L0Vw$import$Relationship.RIGHT),a<r?i|=$L0Vw$import$Relationship.BELOW:a>n&&(i|=$L0Vw$import$Relationship.ABOVE),i===$L0Vw$import$Relationship.UNKNOWN&&(i=$L0Vw$import$Relationship.INTERSECTING),i}function $L0Vw$export$createEmpty(){return[1/0,1/0,-1/0,-1/0]}function $L0Vw$export$createOrUpdate(t,e,$,r,o){return o?(o[0]=t,o[1]=e,o[2]=$,o[3]=r,o):[t,e,$,r]}function $L0Vw$export$createOrUpdateEmpty(t){return $L0Vw$export$createOrUpdate(1/0,1/0,-1/0,-1/0,t)}function $L0Vw$export$createOrUpdateFromCoordinate(t,e){var $=t[0],r=t[1];return $L0Vw$export$createOrUpdate($,r,$,r,e)}function $L0Vw$export$createOrUpdateFromCoordinates(t,e){return $L0Vw$export$extendCoordinates($L0Vw$export$createOrUpdateEmpty(e),t)}function $L0Vw$export$createOrUpdateFromFlatCoordinates(t,e,$,r,o){return $L0Vw$export$extendFlatCoordinates($L0Vw$export$createOrUpdateEmpty(o),t,e,$,r)}function $L0Vw$export$createOrUpdateFromRings(t,e){return $L0Vw$export$extendRings($L0Vw$export$createOrUpdateEmpty(e),t)}function $L0Vw$export$equals(t,e){return t[0]==e[0]&&t[2]==e[2]&&t[1]==e[1]&&t[3]==e[3]}function $L0Vw$export$approximatelyEquals(t,e,$){return Math.abs(t[0]-e[0])<$&&Math.abs(t[2]-e[2])<$&&Math.abs(t[1]-e[1])<$&&Math.abs(t[3]-e[3])<$}function $L0Vw$export$extend(t,e){return e[0]<t[0]&&(t[0]=e[0]),e[2]>t[2]&&(t[2]=e[2]),e[1]<t[1]&&(t[1]=e[1]),e[3]>t[3]&&(t[3]=e[3]),t}function $L0Vw$export$extendCoordinate(t,e){e[0]<t[0]&&(t[0]=e[0]),e[0]>t[2]&&(t[2]=e[0]),e[1]<t[1]&&(t[1]=e[1]),e[1]>t[3]&&(t[3]=e[1])}function $L0Vw$export$extendCoordinates(t,e){for(var $=0,r=e.length;$<r;++$)$L0Vw$export$extendCoordinate(t,e[$]);return t}function $L0Vw$export$extendFlatCoordinates(t,e,$,r,o){for(;$<r;$+=o)$L0Vw$export$extendXY(t,e[$],e[$+1]);return t}function $L0Vw$export$extendRings(t,e){for(var $=0,r=e.length;$<r;++$)$L0Vw$export$extendCoordinates(t,e[$]);return t}function $L0Vw$export$extendXY(t,e,$){t[0]=Math.min(t[0],e),t[1]=Math.min(t[1],$),t[2]=Math.max(t[2],e),t[3]=Math.max(t[3],$)}function $L0Vw$export$forEachCorner(t,e){var $;return($=e($L0Vw$export$getBottomLeft(t)))?$:($=e($L0Vw$export$getBottomRight(t)))?$:($=e($L0Vw$export$getTopRight(t)))?$:($=e($L0Vw$export$getTopLeft(t)))||!1}function $L0Vw$export$getArea(t){var e=0;return $L0Vw$export$isEmpty(t)||(e=$L0Vw$export$getWidth(t)*$L0Vw$export$getHeight(t)),e}function $L0Vw$export$getBottomLeft(t){return[t[0],t[1]]}function $L0Vw$export$getBottomRight(t){return[t[2],t[1]]}function $L0Vw$export$getCenter(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function $L0Vw$export$getCorner(t,e){var $;return e===$L0Vw$import$Corner.BOTTOM_LEFT?$=$L0Vw$export$getBottomLeft(t):e===$L0Vw$import$Corner.BOTTOM_RIGHT?$=$L0Vw$export$getBottomRight(t):e===$L0Vw$import$Corner.TOP_LEFT?$=$L0Vw$export$getTopLeft(t):e===$L0Vw$import$Corner.TOP_RIGHT?$=$L0Vw$export$getTopRight(t):$L0Vw$import$assert(!1,13),$}function $L0Vw$export$getEnlargedArea(t,e){var $=Math.min(t[0],e[0]),r=Math.min(t[1],e[1]);return(Math.max(t[2],e[2])-$)*(Math.max(t[3],e[3])-r)}function $L0Vw$export$getForViewAndSize(t,e,$,r,o){var n=e*r[0]/2,p=e*r[1]/2,a=Math.cos($),i=Math.sin($),x=n*a,L=n*i,w=p*a,V=p*i,s=t[0],c=t[1],u=s-x+V,d=s-x-V,g=s+x-V,m=s+x+V,f=c-L-w,h=c-L+w,l=c+L+w,E=c+L-w;return $L0Vw$export$createOrUpdate(Math.min(u,d,g,m),Math.min(f,h,l,E),Math.max(u,d,g,m),Math.max(f,h,l,E),o)}function $L0Vw$export$getHeight(t){return t[3]-t[1]}function $L0Vw$export$getIntersectionArea(t,e){return $L0Vw$export$getArea($L0Vw$export$getIntersection(t,e))}function $L0Vw$export$getIntersection(t,e,$){var r=$||$L0Vw$export$createEmpty();return $L0Vw$export$intersects(t,e)?(t[0]>e[0]?r[0]=t[0]:r[0]=e[0],t[1]>e[1]?r[1]=t[1]:r[1]=e[1],t[2]<e[2]?r[2]=t[2]:r[2]=e[2],t[3]<e[3]?r[3]=t[3]:r[3]=e[3]):$L0Vw$export$createOrUpdateEmpty(r),r}function $L0Vw$export$getMargin(t){return $L0Vw$export$getWidth(t)+$L0Vw$export$getHeight(t)}function $L0Vw$export$getSize(t){return[t[2]-t[0],t[3]-t[1]]}function $L0Vw$export$getTopLeft(t){return[t[0],t[3]]}function $L0Vw$export$getTopRight(t){return[t[2],t[3]]}function $L0Vw$export$getWidth(t){return t[2]-t[0]}function $L0Vw$export$intersects(t,e){return t[0]<=e[2]&&t[2]>=e[0]&&t[1]<=e[3]&&t[3]>=e[1]}function $L0Vw$export$isEmpty(t){return t[2]<t[0]||t[3]<t[1]}function $L0Vw$export$returnOrUpdate(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t}function $L0Vw$export$scaleFromCenter(t,e){var $=(t[2]-t[0])/2*(e-1),r=(t[3]-t[1])/2*(e-1);t[0]-=$,t[2]+=$,t[1]-=r,t[3]+=r}function $L0Vw$export$intersectsSegment(t,e,$){var r=!1,o=$L0Vw$export$coordinateRelationship(t,e),n=$L0Vw$export$coordinateRelationship(t,$);if(o===$L0Vw$import$Relationship.INTERSECTING||n===$L0Vw$import$Relationship.INTERSECTING)r=!0;else{var p=t[0],a=t[1],i=t[2],x=t[3],L=e[0],w=e[1],V=$[0],s=$[1],c=(s-w)/(V-L),u=void 0,d=void 0;n&$L0Vw$import$Relationship.ABOVE&&!(o&$L0Vw$import$Relationship.ABOVE)&&(r=(u=V-(s-x)/c)>=p&&u<=i),r||!(n&$L0Vw$import$Relationship.RIGHT)||o&$L0Vw$import$Relationship.RIGHT||(r=(d=s-(V-i)*c)>=a&&d<=x),r||!(n&$L0Vw$import$Relationship.BELOW)||o&$L0Vw$import$Relationship.BELOW||(r=(u=V-(s-a)/c)>=p&&u<=i),r||!(n&$L0Vw$import$Relationship.LEFT)||o&$L0Vw$import$Relationship.LEFT||(r=(d=s-(V-p)*c)>=a&&d<=x)}return r}function $L0Vw$export$applyTransform(t,e,$,r){var o=[];if(r>1)for(var n=t[2]-t[0],p=t[3]-t[1],a=0;a<r;++a)o.push(t[0]+n*a/r,t[1],t[2],t[1]+p*a/r,t[2]-n*a/r,t[3],t[0],t[3]-p*a/r);else o=[t[0],t[1],t[2],t[1],t[2],t[3],t[0],t[3]];e(o,o,2);for(var i=[],x=[],L=(a=0,o.length);a<L;a+=2)i.push(o[a]),x.push(o[a+1]);return $L0Vw$var$_boundingExtentXYs(i,x,$)}function $L0Vw$export$wrapX(t,e){var $=e.getExtent(),r=$L0Vw$export$getCenter(t);if(e.canWrapX()&&(r[0]<$[0]||r[0]>=$[2])){var o=$L0Vw$export$getWidth($),n=Math.floor((r[0]-$[0])/o)*o;t[0]-=n,t[2]-=n}return t}$parcel$require(\"L0Vw\",\"./asserts.js\"),$parcel$require(\"L0Vw\",\"./extent/Corner.js\"),$parcel$require(\"L0Vw\",\"./extent/Relationship.js\"),$L0Vw$exports.boundingExtent=$L0Vw$export$boundingExtent,$L0Vw$exports.buffer=$L0Vw$export$buffer,$L0Vw$exports.clone=$L0Vw$export$clone,$L0Vw$exports.closestSquaredDistanceXY=$L0Vw$export$closestSquaredDistanceXY,$L0Vw$exports.containsCoordinate=$L0Vw$export$containsCoordinate,$L0Vw$exports.containsExtent=$L0Vw$export$containsExtent,$L0Vw$exports.containsXY=$L0Vw$export$containsXY,$L0Vw$exports.coordinateRelationship=$L0Vw$export$coordinateRelationship,$L0Vw$exports.createEmpty=$L0Vw$export$createEmpty,$L0Vw$exports.createOrUpdate=$L0Vw$export$createOrUpdate,$L0Vw$exports.createOrUpdateEmpty=$L0Vw$export$createOrUpdateEmpty,$L0Vw$exports.createOrUpdateFromCoordinate=$L0Vw$export$createOrUpdateFromCoordinate,$L0Vw$exports.createOrUpdateFromCoordinates=$L0Vw$export$createOrUpdateFromCoordinates,$L0Vw$exports.createOrUpdateFromFlatCoordinates=$L0Vw$export$createOrUpdateFromFlatCoordinates,$L0Vw$exports.createOrUpdateFromRings=$L0Vw$export$createOrUpdateFromRings,$L0Vw$exports.equals=$L0Vw$export$equals,$L0Vw$exports.approximatelyEquals=$L0Vw$export$approximatelyEquals,$L0Vw$exports.extend=$L0Vw$export$extend,$L0Vw$exports.extendCoordinate=$L0Vw$export$extendCoordinate,$L0Vw$exports.extendCoordinates=$L0Vw$export$extendCoordinates,$L0Vw$exports.extendFlatCoordinates=$L0Vw$export$extendFlatCoordinates,$L0Vw$exports.extendRings=$L0Vw$export$extendRings,$L0Vw$exports.extendXY=$L0Vw$export$extendXY,$L0Vw$exports.forEachCorner=$L0Vw$export$forEachCorner,$L0Vw$exports.getArea=$L0Vw$export$getArea,$L0Vw$exports.getBottomLeft=$L0Vw$export$getBottomLeft,$L0Vw$exports.getBottomRight=$L0Vw$export$getBottomRight,$L0Vw$exports.getCenter=$L0Vw$export$getCenter,$L0Vw$exports.getCorner=$L0Vw$export$getCorner,$L0Vw$exports.getEnlargedArea=$L0Vw$export$getEnlargedArea,$L0Vw$exports.getForViewAndSize=$L0Vw$export$getForViewAndSize,$L0Vw$exports.getHeight=$L0Vw$export$getHeight,$L0Vw$exports.getIntersectionArea=$L0Vw$export$getIntersectionArea,$L0Vw$exports.getIntersection=$L0Vw$export$getIntersection,$L0Vw$exports.getMargin=$L0Vw$export$getMargin,$L0Vw$exports.getSize=$L0Vw$export$getSize,$L0Vw$exports.getTopLeft=$L0Vw$export$getTopLeft,$L0Vw$exports.getTopRight=$L0Vw$export$getTopRight,$L0Vw$exports.getWidth=$L0Vw$export$getWidth,$L0Vw$exports.intersects=$L0Vw$export$intersects,$L0Vw$exports.isEmpty=$L0Vw$export$isEmpty,$L0Vw$exports.returnOrUpdate=$L0Vw$export$returnOrUpdate,$L0Vw$exports.scaleFromCenter=$L0Vw$export$scaleFromCenter,$L0Vw$exports.intersectsSegment=$L0Vw$export$intersectsSegment,$L0Vw$exports.applyTransform=$L0Vw$export$applyTransform,$L0Vw$exports.wrapX=$L0Vw$export$wrapX;"},"sourceMaps":null,"error":null,"hash":"ebad9f26a685704ec26559aa297757cb","cacheData":{"env":{},"imports":{"$L0Vw$import$assert":["./asserts.js","assert"],"$L0Vw$import$Corner":["./extent/Corner.js","default"],"$L0Vw$import$Relationship":["./extent/Relationship.js","default"]},"exports":{"boundingExtent":"$L0Vw$export$boundingExtent","buffer":"$L0Vw$export$buffer","clone":"$L0Vw$export$clone","closestSquaredDistanceXY":"$L0Vw$export$closestSquaredDistanceXY","containsCoordinate":"$L0Vw$export$containsCoordinate","containsExtent":"$L0Vw$export$containsExtent","containsXY":"$L0Vw$export$containsXY","coordinateRelationship":"$L0Vw$export$coordinateRelationship","createEmpty":"$L0Vw$export$createEmpty","createOrUpdate":"$L0Vw$export$createOrUpdate","createOrUpdateEmpty":"$L0Vw$export$createOrUpdateEmpty","createOrUpdateFromCoordinate":"$L0Vw$export$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates":"$L0Vw$export$createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates":"$L0Vw$export$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings":"$L0Vw$export$createOrUpdateFromRings","equals":"$L0Vw$export$equals","approximatelyEquals":"$L0Vw$export$approximatelyEquals","extend":"$L0Vw$export$extend","extendCoordinate":"$L0Vw$export$extendCoordinate","extendCoordinates":"$L0Vw$export$extendCoordinates","extendFlatCoordinates":"$L0Vw$export$extendFlatCoordinates","extendRings":"$L0Vw$export$extendRings","extendXY":"$L0Vw$export$extendXY","forEachCorner":"$L0Vw$export$forEachCorner","getArea":"$L0Vw$export$getArea","getBottomLeft":"$L0Vw$export$getBottomLeft","getBottomRight":"$L0Vw$export$getBottomRight","getCenter":"$L0Vw$export$getCenter","getCorner":"$L0Vw$export$getCorner","getEnlargedArea":"$L0Vw$export$getEnlargedArea","getForViewAndSize":"$L0Vw$export$getForViewAndSize","getHeight":"$L0Vw$export$getHeight","getIntersectionArea":"$L0Vw$export$getIntersectionArea","getIntersection":"$L0Vw$export$getIntersection","getMargin":"$L0Vw$export$getMargin","getSize":"$L0Vw$export$getSize","getTopLeft":"$L0Vw$export$getTopLeft","getTopRight":"$L0Vw$export$getTopRight","getWidth":"$L0Vw$export$getWidth","intersects":"$L0Vw$export$intersects","isEmpty":"$L0Vw$export$isEmpty","returnOrUpdate":"$L0Vw$export$returnOrUpdate","scaleFromCenter":"$L0Vw$export$scaleFromCenter","intersectsSegment":"$L0Vw$export$intersectsSegment","applyTransform":"$L0Vw$export$applyTransform","wrapX":"$L0Vw$export$wrapX"},"wildcards":[],"sideEffects":false,"isES6Module":true}}