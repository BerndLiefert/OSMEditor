{"id":"Bhwh","dependencies":[{"name":"D:\\Projects\\ol\\package.json","includedInParent":true,"mtime":1586548571472},{"name":"D:\\Projects\\ol\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1586157047249},{"name":"../../math.js","loc":{"line":4,"column":51},"parent":"D:\\Projects\\ol\\node_modules\\ol\\geom\\flat\\closest.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\math.js"}],"generated":{"js":"var $Bhwh$exports={};function $Bhwh$var$assignClosest(r,t,a,e,$,h,s){var o,n=r[t],i=r[t+1],l=r[a]-n,u=r[a+1]-i;if(0===l&&0===u)o=t;else{var x=(($-n)*l+(h-i)*u)/(l*l+u*u);if(x>1)o=a;else{if(x>0){for(var w=0;w<e;++w)s[w]=$Bhwh$import$lerp(r[t+w],r[a+w],x);return void(s.length=e)}o=t}}for(w=0;w<e;++w)s[w]=r[o+w];s.length=e}function $Bhwh$export$maxSquaredDelta(r,t,a,e,$){var h=r[t],s=r[t+1];for(t+=e;t<a;t+=e){var o=r[t],n=r[t+1],i=$Bhwh$import$squaredDx(h,s,o,n);i>$&&($=i),h=o,s=n}return $}function $Bhwh$export$arrayMaxSquaredDelta(r,t,a,e,$){for(var h=0,s=a.length;h<s;++h){var o=a[h];$=$Bhwh$export$maxSquaredDelta(r,t,o,e,$),t=o}return $}function $Bhwh$export$multiArrayMaxSquaredDelta(r,t,a,e,$){for(var h=0,s=a.length;h<s;++h){var o=a[h];$=$Bhwh$export$arrayMaxSquaredDelta(r,t,o,e,$),t=o[o.length-1]}return $}function $Bhwh$export$assignClosestPoint(r,t,a,e,$,h,s,o,n,i,l){if(t==a)return i;var u,x;if(0===$){if((x=$Bhwh$import$squaredDx(s,o,r[t],r[t+1]))<i){for(u=0;u<e;++u)n[u]=r[t+u];return n.length=e,x}return i}for(var w=l||[NaN,NaN],B=t+e;B<a;)if($Bhwh$var$assignClosest(r,B-e,B,e,s,o,w),(x=$Bhwh$import$squaredDx(s,o,w[0],w[1]))<i){for(i=x,u=0;u<e;++u)n[u]=w[u];n.length=e,B+=e}else B+=e*Math.max((Math.sqrt(x)-Math.sqrt(i))/$|0,1);if(h&&($Bhwh$var$assignClosest(r,a-e,t,e,s,o,w),(x=$Bhwh$import$squaredDx(s,o,w[0],w[1]))<i)){for(i=x,u=0;u<e;++u)n[u]=w[u];n.length=e}return i}function $Bhwh$export$assignClosestArrayPoint(r,t,a,e,$,h,s,o,n,i,l){for(var u=l||[NaN,NaN],x=0,w=a.length;x<w;++x){var B=a[x];i=$Bhwh$export$assignClosestPoint(r,t,B,e,$,h,s,o,n,i,u),t=B}return i}function $Bhwh$export$assignClosestMultiArrayPoint(r,t,a,e,$,h,s,o,n,i,l){for(var u=l||[NaN,NaN],x=0,w=a.length;x<w;++x){var B=a[x];i=$Bhwh$export$assignClosestArrayPoint(r,t,B,e,$,h,s,o,n,i,u),t=B[B.length-1]}return i}$parcel$require(\"Bhwh\",\"../../math.js\"),$Bhwh$exports.maxSquaredDelta=$Bhwh$export$maxSquaredDelta,$Bhwh$exports.arrayMaxSquaredDelta=$Bhwh$export$arrayMaxSquaredDelta,$Bhwh$exports.multiArrayMaxSquaredDelta=$Bhwh$export$multiArrayMaxSquaredDelta,$Bhwh$exports.assignClosestPoint=$Bhwh$export$assignClosestPoint,$Bhwh$exports.assignClosestArrayPoint=$Bhwh$export$assignClosestArrayPoint,$Bhwh$exports.assignClosestMultiArrayPoint=$Bhwh$export$assignClosestMultiArrayPoint;"},"sourceMaps":null,"error":null,"hash":"b90621df7b6db72cc06fd7712438ab33","cacheData":{"env":{},"imports":{"$Bhwh$import$lerp":["../../math.js","lerp"],"$Bhwh$import$squaredDx":["../../math.js","squaredDistance"]},"exports":{"maxSquaredDelta":"$Bhwh$export$maxSquaredDelta","arrayMaxSquaredDelta":"$Bhwh$export$arrayMaxSquaredDelta","multiArrayMaxSquaredDelta":"$Bhwh$export$multiArrayMaxSquaredDelta","assignClosestPoint":"$Bhwh$export$assignClosestPoint","assignClosestArrayPoint":"$Bhwh$export$assignClosestArrayPoint","assignClosestMultiArrayPoint":"$Bhwh$export$assignClosestMultiArrayPoint"},"wildcards":[],"sideEffects":false,"isES6Module":true}}