{"id":"qAK2","dependencies":[{"name":"D:\\Projects\\ol\\package.json","includedInParent":true,"mtime":1586548571472},{"name":"D:\\Projects\\ol\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1586157047249}],"generated":{"js":"var $qAK2$exports={};function $qAK2$export$clamp(r,e,t){return Math.min(Math.max(r,e),t)}$qAK2$exports.clamp=$qAK2$export$clamp;var $qAK2$export$cosh=\"cosh\"in Math?Math.cosh:function(r){var e=Math.exp(r);return(e+1/e)/2};function $qAK2$export$squaredSegmentDistance(r,e,t,$,o,a){var n=o-t,s=a-$;if(0!==n||0!==s){var p=((r-t)*n+(e-$)*s)/(n*n+s*s);p>1?(t=o,$=a):p>0&&(t+=n*p,$+=s*p)}return $qAK2$export$squaredDistance(r,e,t,$)}function $qAK2$export$squaredDistance(r,e,t,$){var o=t-r,a=$-e;return o*o+a*a}function $qAK2$export$solveLinearSystem(r){for(var e=r.length,t=0;t<e;t++){for(var $=t,o=Math.abs(r[t][t]),a=t+1;a<e;a++){var n=Math.abs(r[a][t]);n>o&&(o=n,$=a)}if(0===o)return null;var s=r[$];r[$]=r[t],r[t]=s;for(var p=t+1;p<e;p++)for(var q=-r[p][t]/r[t][t],x=t;x<e+1;x++)t==x?r[p][x]=0:r[p][x]+=q*r[t][x]}for(var u=new Array(e),A=e-1;A>=0;A--){u[A]=r[A][e]/r[A][A];for(var K=A-1;K>=0;K--)r[K][e]-=r[K][A]*u[A]}return u}function $qAK2$export$toDegrees(r){return 180*r/Math.PI}function $qAK2$export$toRadians(r){return r*Math.PI/180}function $qAK2$export$modulo(r,e){var t=r%e;return t*e<0?t+e:t}function $qAK2$export$lerp(r,e,t){return r+t*(e-r)}$qAK2$exports.cosh=$qAK2$export$cosh,$qAK2$exports.squaredSegmentDistance=$qAK2$export$squaredSegmentDistance,$qAK2$exports.squaredDistance=$qAK2$export$squaredDistance,$qAK2$exports.solveLinearSystem=$qAK2$export$solveLinearSystem,$qAK2$exports.toDegrees=$qAK2$export$toDegrees,$qAK2$exports.toRadians=$qAK2$export$toRadians,$qAK2$exports.modulo=$qAK2$export$modulo,$qAK2$exports.lerp=$qAK2$export$lerp;"},"sourceMaps":null,"error":null,"hash":"7f11835bb8f2f3833bb2e8bb51b6fdc8","cacheData":{"env":{},"imports":{},"exports":{"clamp":"$qAK2$export$clamp","cosh":"$qAK2$export$cosh","squaredSegmentDistance":"$qAK2$export$squaredSegmentDistance","squaredDistance":"$qAK2$export$squaredDistance","solveLinearSystem":"$qAK2$export$solveLinearSystem","toDegrees":"$qAK2$export$toDegrees","toRadians":"$qAK2$export$toRadians","modulo":"$qAK2$export$modulo","lerp":"$qAK2$export$lerp"},"wildcards":[],"sideEffects":false,"isES6Module":true}}