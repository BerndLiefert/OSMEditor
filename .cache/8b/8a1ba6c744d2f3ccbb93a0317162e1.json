{"id":"Focm","dependencies":[{"name":"D:\\Projects\\ol\\package.json","includedInParent":true,"mtime":1586548571472},{"name":"ol/ol.css","loc":{"line":1,"column":7},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\ol.css"},{"name":"ol/Map","loc":{"line":2,"column":16},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\Map.js"},{"name":"ol/View","loc":{"line":3,"column":17},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\View.js"},{"name":"ol/geom/Point","loc":{"line":4,"column":18},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\geom\\Point.js"},{"name":"ol/interaction","loc":{"line":5,"column":35},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\interaction.js"},{"name":"ol/layer","loc":{"line":6,"column":57},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\layer.js"},{"name":"ol/source","loc":{"line":7,"column":44},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\source.js"},{"name":"ol/style","loc":{"line":8,"column":65},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\style.js"},{"name":"ol/format/GeoJSON","loc":{"line":9,"column":20},"parent":"D:\\Projects\\ol\\public\\index.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\format\\GeoJSON.js"}],"generated":{"js":"function $Focm$var$_createForOfIteratorHelper(r){if(\"undefined\"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(r=$Focm$var$_unsupportedIterableToArray(r))){var o=0,e=function(){};return{s:e,n:function(){return o>=r.length?{done:!0}:{done:!1,value:r[o++]}},e:function(r){throw r},f:e}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var $,t,a=!0,c=!1;return{s:function(){$=r[Symbol.iterator]()},n:function(){var r=$.next();return a=r.done,r},e:function(r){c=!0,t=r},f:function(){try{a||null==$.return||$.return()}finally{if(c)throw t}}}}function $Focm$var$_unsupportedIterableToArray(r,o){if(r){if(\"string\"==typeof r)return $Focm$var$_arrayLikeToArray(r,o);var e=Object.prototype.toString.call(r).slice(8,-1);return\"Object\"===e&&r.constructor&&(e=r.constructor.name),\"Map\"===e||\"Set\"===e?Array.from(e):\"Arguments\"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?$Focm$var$_arrayLikeToArray(r,o):void 0}}function $Focm$var$_arrayLikeToArray(r,o){(null==o||o>r.length)&&(o=r.length);for(var e=0,$=new Array(o);e<o;e++)$[e]=r[e];return $}$parcel$require(\"Focm\",\"ol/ol.css\"),$parcel$require(\"Focm\",\"ol/Map\"),$parcel$require(\"Focm\",\"ol/View\"),$parcel$require(\"Focm\",\"ol/geom/Point\"),$parcel$require(\"Focm\",\"ol/interaction\"),$parcel$require(\"Focm\",\"ol/layer\"),$parcel$require(\"Focm\",\"ol/source\"),$parcel$require(\"Focm\",\"ol/style\"),$parcel$require(\"Focm\",\"ol/format/GeoJSON\");var $Focm$var$draw,$Focm$var$snap,$Focm$var$raster=new $Focm$import$TileLayer({source:new $Focm$import$OSM}),$Focm$var$color=\"#FF11A3\",$Focm$var$styleFunction=function(r){var o=r.getGeometry(),e=[new $Focm$import$Style({stroke:new $Focm$import$Stroke({color:\"#ffcc33\",width:2})})];return console.log(o.getType()),\"LineString\"==o.getType()&&o.forEachSegment(function(r,o){var $=o[0]-r[0],t=o[1]-r[1],a=Math.atan2(t,$);e.push(new $Focm$import$Style({geometry:new $Focm$import$Point(o),image:new $Focm$import$Icon({src:\"assets/arrow.png\",size:[256,256],scale:.25,offset:[0,0],anchor:[.75,.5],rotateWithView:!0,rotation:-a})}))}),e},$Focm$var$source=new $Focm$import$VectorSource,$Focm$var$vector2=new $Focm$import$VectorLayer({source:$Focm$var$source,style:$Focm$var$styleFunction}),$Focm$var$vector=new $Focm$import$VectorLayer({source:$Focm$var$source,style:new $Focm$import$Style({fill:new $Focm$import$Fill({color:\"rgba(255, 255, 255, 0.2)\"}),stroke:new $Focm$import$Stroke({color:$Focm$var$color,width:2}),image:new $Focm$import$Icon({src:\"marker.png\",size:[128,128],offset:[0,0],opacity:1,scale:.25})})}),$Focm$var$map=new $Focm$import$Map({layers:[$Focm$var$raster,$Focm$var$vector,$Focm$var$vector2],target:\"map\",view:new $Focm$import$View({center:[-11e6,46e5],zoom:4})}),$Focm$var$modify=new $Focm$import$Modify({source:$Focm$var$source});function $Focm$var$addInteractions(){$Focm$var$draw=new $Focm$import$Draw({source:$Focm$var$source,type:document.querySelector('input[name=\"tool\"]:checked').value}),$Focm$var$map.addInteraction($Focm$var$draw),$Focm$var$snap=new $Focm$import$Snap({source:$Focm$var$source}),$Focm$var$map.addInteraction($Focm$var$snap)}$Focm$var$map.addInteraction($Focm$var$modify);var $Focm$var$_step,$Focm$var$buttons=document.getElementsByName(\"tool\"),$Focm$var$_iterator=$Focm$var$_createForOfIteratorHelper($Focm$var$buttons);try{for($Focm$var$_iterator.s();!($Focm$var$_step=$Focm$var$_iterator.n()).done;){var button=$Focm$var$_step.value;button.addEventListener(\"click\",function(r){$Focm$var$map.removeInteraction($Focm$var$draw),$Focm$var$map.removeInteraction($Focm$var$snap),$Focm$var$addInteractions()})}}catch(err){$Focm$var$_iterator.e(err)}finally{$Focm$var$_iterator.f()}$Focm$var$addInteractions();var $Focm$var$_step2,$Focm$var$labels=document.querySelectorAll(\"label\"),$Focm$var$_iterator2=$Focm$var$_createForOfIteratorHelper($Focm$var$labels);try{for($Focm$var$_iterator2.s();!($Focm$var$_step2=$Focm$var$_iterator2.n()).done;){var label=$Focm$var$_step2.value;label.addEventListener(\"click\",function(){$Focm$var$unstyle(),this.style.setProperty(\"opacity\",1)})}}catch(err){$Focm$var$_iterator2.e(err)}finally{$Focm$var$_iterator2.f()}function $Focm$var$unstyle(){var r,o=$Focm$var$_createForOfIteratorHelper(document.querySelectorAll(\"label\"));try{for(o.s();!(r=o.n()).done;){r.value.style.setProperty(\"opacity\",.3)}}catch(err){o.e(err)}finally{o.f()}}document.querySelector(\"#color\").oninput=function(){$Focm$var$color=this.value},fetch(\"./berlin_bezirke.geojson\").then(function(r){return r.json()}).then(function(r){console.log(r);var o=new $Focm$import$VectorSource({features:(new $Focm$import$GeoJSON).readFeatures(r)}),e=new $Focm$import$VectorLayer({source:o,style:new $Focm$import$Style({fill:new $Focm$import$Fill({color:\"rgba(255, 255, 255, 0.2)\"}),stroke:new $Focm$import$Stroke({color:\"rbga(0, 255, 0, 1\",width:2})})});$Focm$var$map.addLayer(e)});"},"sourceMaps":null,"error":null,"hash":"d99fefc792c62f68854720952e2606f4","cacheData":{"env":{},"imports":{"$Focm$import$Map":["ol/Map","default"],"$Focm$import$View":["ol/View","default"],"$Focm$import$Point":["ol/geom/Point","default"],"$Focm$import$Draw":["ol/interaction","Draw"],"$Focm$import$Modify":["ol/interaction","Modify"],"$Focm$import$Snap":["ol/interaction","Snap"],"$Focm$import$TileLayer":["ol/layer","Tile"],"$Focm$import$VectorLayer":["ol/layer","Vector"],"$Focm$import$OSM":["ol/source","OSM"],"$Focm$import$VectorSource":["ol/source","Vector"],"$Focm$import$CircleStyle":["ol/style","Circle"],"$Focm$import$Fill":["ol/style","Fill"],"$Focm$import$Icon":["ol/style","Icon"],"$Focm$import$Stroke":["ol/style","Stroke"],"$Focm$import$Style":["ol/style","Style"],"$Focm$import$GeoJSON":["ol/format/GeoJSON","default"]},"exports":{},"wildcards":[],"sideEffects":true}}