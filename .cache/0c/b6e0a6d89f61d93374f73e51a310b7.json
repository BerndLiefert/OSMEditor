{"id":"wmMI","dependencies":[{"name":"D:\\Projects\\ol\\package.json","includedInParent":true,"mtime":1586548571472},{"name":"D:\\Projects\\ol\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1586157047249},{"name":"../../math.js","loc":{"line":29,"column":56},"parent":"D:\\Projects\\ol\\node_modules\\ol\\geom\\flat\\simplify.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\math.js"}],"generated":{"js":"var $wmMI$exports={};function $wmMI$export$simplifyLineString(r,$,e,t,a,o,n){var u=void 0!==n?n:[];return o||(e=$wmMI$export$radialDistance(r,$,e,t,a,u,0),r=u,$=0,t=2),u.length=$wmMI$export$douglasPeucker(r,$,e,t,a,u,0),u}function $wmMI$export$douglasPeucker(r,$,e,t,a,o,n){var u=(e-$)/t;if(u<3){for(;$<e;$+=t)o[n++]=r[$],o[n++]=r[$+1];return n}var p=new Array(u);p[0]=1,p[u-1]=1;for(var i=[$,e-t],m=0;i.length>0;){for(var M=i.pop(),s=i.pop(),w=0,I=r[s],x=r[s+1],l=r[M],c=r[M+1],f=s+t;f<M;f+=t){var g=r[f],d=r[f+1],v=$wmMI$import$squaredSegmentDistance(g,d,I,x,l,c);v>w&&(m=f,w=v)}w>a&&(p[(m-$)/t]=1,s+t<m&&i.push(s,m),m+t<M&&i.push(m,M))}for(f=0;f<u;++f)p[f]&&(o[n++]=r[$+f*t],o[n++]=r[$+f*t+1]);return n}function $wmMI$export$douglasPeuckerArray(r,$,e,t,a,o,n,u){for(var p=0,i=e.length;p<i;++p){var m=e[p];n=$wmMI$export$douglasPeucker(r,$,m,t,a,o,n),u.push(n),$=m}return n}function $wmMI$export$douglasPeuckerMultiArray(r,$,e,t,a,o,n,u){for(var p=0,i=e.length;p<i;++p){var m=e[p],M=[];n=$wmMI$export$douglasPeuckerArray(r,$,m,t,a,o,n,M),u.push(M),$=m[m.length-1]}return n}function $wmMI$export$radialDistance(r,$,e,t,a,o,n){if(e<=$+t){for(;$<e;$+=t)o[n++]=r[$],o[n++]=r[$+1];return n}var u=r[$],p=r[$+1];o[n++]=u,o[n++]=p;var i=u,m=p;for($+=t;$<e;$+=t)i=r[$],m=r[$+1],$wmMI$import$squaredDistance(u,p,i,m)>a&&(o[n++]=i,o[n++]=m,u=i,p=m);return i==u&&m==p||(o[n++]=i,o[n++]=m),n}function $wmMI$export$snap(r,$){return $*Math.round(r/$)}function $wmMI$export$quantize(r,$,e,t,a,o,n){if($==e)return n;var u,p,i=$wmMI$export$snap(r[$],a),m=$wmMI$export$snap(r[$+1],a);$+=t,o[n++]=i,o[n++]=m;do{if(u=$wmMI$export$snap(r[$],a),p=$wmMI$export$snap(r[$+1],a),($+=t)==e)return o[n++]=u,o[n++]=p,n}while(u==i&&p==m);for(;$<e;){var M=$wmMI$export$snap(r[$],a),s=$wmMI$export$snap(r[$+1],a);if($+=t,M!=u||s!=p){var w=u-i,I=p-m,x=M-i,l=s-m;w*l==I*x&&(w<0&&x<w||w==x||w>0&&x>w)&&(I<0&&l<I||I==l||I>0&&l>I)?(u=M,p=s):(o[n++]=u,o[n++]=p,i=u,m=p,u=M,p=s)}}return o[n++]=u,o[n++]=p,n}function $wmMI$export$quantizeArray(r,$,e,t,a,o,n,u){for(var p=0,i=e.length;p<i;++p){var m=e[p];n=$wmMI$export$quantize(r,$,m,t,a,o,n),u.push(n),$=m}return n}function $wmMI$export$quantizeMultiArray(r,$,e,t,a,o,n,u){for(var p=0,i=e.length;p<i;++p){var m=e[p],M=[];n=$wmMI$export$quantizeArray(r,$,m,t,a,o,n,M),u.push(M),$=m[m.length-1]}return n}$parcel$require(\"wmMI\",\"../../math.js\"),$wmMI$exports.simplifyLineString=$wmMI$export$simplifyLineString,$wmMI$exports.douglasPeucker=$wmMI$export$douglasPeucker,$wmMI$exports.douglasPeuckerArray=$wmMI$export$douglasPeuckerArray,$wmMI$exports.douglasPeuckerMultiArray=$wmMI$export$douglasPeuckerMultiArray,$wmMI$exports.radialDistance=$wmMI$export$radialDistance,$wmMI$exports.snap=$wmMI$export$snap,$wmMI$exports.quantize=$wmMI$export$quantize,$wmMI$exports.quantizeArray=$wmMI$export$quantizeArray,$wmMI$exports.quantizeMultiArray=$wmMI$export$quantizeMultiArray;"},"sourceMaps":null,"error":null,"hash":"760a953cea787cde74af6aba610bf62e","cacheData":{"env":{},"imports":{"$wmMI$import$squaredSegmentDistance":["../../math.js","squaredSegmentDistance"],"$wmMI$import$squaredDistance":["../../math.js","squaredDistance"]},"exports":{"simplifyLineString":"$wmMI$export$simplifyLineString","douglasPeucker":"$wmMI$export$douglasPeucker","douglasPeuckerArray":"$wmMI$export$douglasPeuckerArray","douglasPeuckerMultiArray":"$wmMI$export$douglasPeuckerMultiArray","radialDistance":"$wmMI$export$radialDistance","snap":"$wmMI$export$snap","quantize":"$wmMI$export$quantize","quantizeArray":"$wmMI$export$quantizeArray","quantizeMultiArray":"$wmMI$export$quantizeMultiArray"},"wildcards":[],"sideEffects":false,"isES6Module":true}}