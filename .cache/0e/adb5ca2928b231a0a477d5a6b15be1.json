{"id":"VRTH","dependencies":[{"name":"D:\\Projects\\ol\\package.json","includedInParent":true,"mtime":1586548571472},{"name":"D:\\Projects\\ol\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1586157047249},{"name":"../../array.js","loc":{"line":4,"column":29},"parent":"D:\\Projects\\ol\\node_modules\\ol\\geom\\flat\\interpolate.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\array.js"},{"name":"../../math.js","loc":{"line":5,"column":21},"parent":"D:\\Projects\\ol\\node_modules\\ol\\geom\\flat\\interpolate.js","resolved":"D:\\Projects\\ol\\node_modules\\ol\\math.js"}],"generated":{"js":"var $VRTH$exports={};function $VRTH$export$interpolatePoint(r,e,t,i,n,$){var o=NaN,l=NaN,a=(t-e)/i;if(1===a)o=r[e],l=r[e+1];else if(2==a)o=(1-n)*r[e]+n*r[e+i],l=(1-n)*r[e+1]+n*r[e+i+1];else if(0!==a){for(var u=r[e],p=r[e+1],f=0,s=[0],H=e+i;H<t;H+=i){var R=r[H],T=r[H+1];f+=Math.sqrt((R-u)*(R-u)+(T-p)*(T-p)),s.push(f),u=R,p=T}var V=n*f,v=$VRTH$import$binarySearch(s,V);if(v<0){var c=(V-s[-v-2])/(s[-v-1]-s[-v-2]),g=e+(-v-2)*i;o=$VRTH$import$lerp(r[g],r[g+i],c),l=$VRTH$import$lerp(r[g+1],r[g+i+1],c)}else o=r[e+v*i],l=r[e+v*i+1]}return $?($[0]=o,$[1]=l,$):[o,l]}function $VRTH$export$lineStringCoordinateAtM(r,e,t,i,n,$){if(t==e)return null;var o;if(n<r[e+i-1])return $?((o=r.slice(e,e+i))[i-1]=n,o):null;if(r[t-1]<n)return $?((o=r.slice(t-i,t))[i-1]=n,o):null;if(n==r[e+i-1])return r.slice(e,e+i);for(var l=e/i,a=t/i;l<a;){var u=l+a>>1;n<r[(u+1)*i-1]?a=u:l=u+1}var p=r[l*i-1];if(n==p)return r.slice((l-1)*i,(l-1)*i+i);var f=(n-p)/(r[(l+1)*i-1]-p);o=[];for(var s=0;s<i-1;++s)o.push($VRTH$import$lerp(r[(l-1)*i+s],r[l*i+s],f));return o.push(n),o}function $VRTH$export$lineStringsCoordinateAtM(r,e,t,i,n,$,o){if(o)return $VRTH$export$lineStringCoordinateAtM(r,e,t[t.length-1],i,n,$);var l;if(n<r[i-1])return $?((l=r.slice(0,i))[i-1]=n,l):null;if(r[r.length-1]<n)return $?((l=r.slice(r.length-i))[i-1]=n,l):null;for(var a=0,u=t.length;a<u;++a){var p=t[a];if(e!=p){if(n<r[e+i-1])return null;if(n<=r[p-1])return $VRTH$export$lineStringCoordinateAtM(r,e,p,i,n,!1);e=p}}return null}$parcel$require(\"VRTH\",\"../../array.js\"),$parcel$require(\"VRTH\",\"../../math.js\"),$VRTH$exports.interpolatePoint=$VRTH$export$interpolatePoint,$VRTH$exports.lineStringCoordinateAtM=$VRTH$export$lineStringCoordinateAtM,$VRTH$exports.lineStringsCoordinateAtM=$VRTH$export$lineStringsCoordinateAtM;"},"sourceMaps":null,"error":null,"hash":"6ef6c1dee0b13dd95ff73a4ecabccb53","cacheData":{"env":{},"imports":{"$VRTH$import$binarySearch":["../../array.js","binarySearch"],"$VRTH$import$lerp":["../../math.js","lerp"]},"exports":{"interpolatePoint":"$VRTH$export$interpolatePoint","lineStringCoordinateAtM":"$VRTH$export$lineStringCoordinateAtM","lineStringsCoordinateAtM":"$VRTH$export$lineStringsCoordinateAtM"},"wildcards":[],"sideEffects":false,"isES6Module":true}}